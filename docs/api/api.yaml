openapi: 3.0.0
info:
  title: PokeRaid API
  version: 1.0.0
  description: API for user registration, login, blockchain, shop operations and real-time room interactions via WebSocket

servers:
  - url: http://localhost:3000

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '200':
          description: Successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string

  /users/login:
    post:
      summary: Log in a user and get session ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: Invalid credentials

  /users/poketmons:
    get:
      summary: Get user's Pokémon
      security:
        - sessionAuth: []
      responses:
        '200':
          description: List of user Pokémon
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPokemon'

  /users/wallet/link:
    post:
      summary: Link a blockchain wallet
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privateKey:
                  type: string
      responses:
        '200':
          description: Wallet linked

  /shop/items:
    get:
      summary: Get available shop Pokémon items
      responses:
        '200':
          description: List of Pokémon items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopItem'

  /shop/purchase:
    post:
      summary: Purchase a Pokémon item
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: number
      responses:
        '200':
          description: Purchase success
          content:
            application/json:
              schema:
                type: object
                properties:
                  itemId:
                    type: number
                  txHash:
                    type: string

  /blockchain/balance:
    get:
      summary: Get token balance
      security:
        - sessionAuth: []
      responses:
        '200':
          description: User's token balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  balance:
                    type: string

  /blockchain/deduct:
    post:
      summary: Deduct tokens from user
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '200':
          description: Token deduction successful

  /blockchain/grant:
    post:
      summary: Grant tokens to user
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '200':
          description: Token grant successful

  /rooms:
    post:
      summary: Create a new room
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                maxMembers:
                  type: integer
      responses:
        '201':
          description: Room created
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId:
                    type: string
                  name:
                    type: string
                  maxMembers:
                    type: integer
    get:
      summary: Get available rooms
      security:
        - sessionAuth: []
      responses:
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roomId:
                      type: string
                    name:
                      type: string
                    currentMembers:
                      type: integer
                    maxMembers:
                      type: integer
components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    CreateUserDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: user123
        password:
          type: string
          example: pass1234

    LoginUserDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponseDto:
      type: object
      properties:
        sessionId:
          type: string
        username:
          type: string

    ShopItem:
      type: object
      properties:
        shop_id:
          type: number
        price:
          type: number
        stock:
          type: number
        pokemon:
          type: object

    UserPokemon:
      type: object
      properties:
        id:
          type: number
        pokemon:
          type: object
        skills:
          type: array
          items:
            type: object
        obtainedAt:
          type: string
